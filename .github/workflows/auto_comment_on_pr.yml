name: Auto-comment on PR
on:
  pull_request:
    types: 
      - opened
      - synchronize

jobs:
  comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-

    - name: Gather PR details
      id: pr_details
      run: |
        set -x
        set -e
        
        PR_ID=$(jq -r ".pull_request.number" "$GITHUB_EVENT_PATH") || exit 1
        PR_AUTHOR=$(jq -r ".pull_request.user.login" "$GITHUB_EVENT_PATH") || exit 1
        PR_BRANCH=$(jq -r ".pull_request.head.ref" "$GITHUB_EVENT_PATH") || exit 1
        
        REPO_URL="https://github.com/labrynx/error-enhanced/blob/$PR_BRANCH"
        
        # Fetch Files Changed details
        FILES_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/labrynx/error-enhanced/pulls/$PR_ID/files") || exit 1
        
        FILES_LINKED=""
        
        # Iterate through each file to get details
        for row in $(echo "${FILES_JSON}" | jq -r ".[] | @base64"); do
          _jq() {
            echo "${row}" | base64 --decode | jq -r "${1}"
          }
          
          FILE_NAME=$(_jq ".filename")
          ADDITIONS=$(_jq ".additions")
          DELETIONS=$(_jq ".deletions")
          CHANGES=$(_jq ".changes")
          
          FILES_LINKED+="- [$FILE_NAME]($REPO_URL/$FILE_NAME) (Additions: $ADDITIONS, Deletions: $DELETIONS, Changes: $CHANGES)"$'\n'
        done

        {
          echo "PR_ID=$PR_ID"
          echo "PR_AUTHOR=$PR_AUTHOR"
        } >> "$GITHUB_ENV"

        echo "$FILES_LINKED" > files_linked.txt
        set +x

    - name: Upload files_linked as artifact
      uses: actions/upload-artifact@v2
      with:
        name: files_linked
        path: files_linked.txt

    - name: Set Workflow Status
      run: echo "WORKFLOW_STATUS=success" >> $GITHUB_ENV
      if: success()

    - name: Error Handling
      if: failure()
      run: |
        echo "WORKFLOW_STATUS=failure" >> $GITHUB_ENV
        echo "An error occurred. Check the logs for details."

    - name: Download files_linked from artifact
      uses: actions/download-artifact@v2
      with:
        name: files_linked

    - name: Add comment to PR
      run: |
        set -x
        FILES_LINKED=$(cat files_linked.txt)
        COMMENT_TEXT='{
          "body": ("Hey @" + $pr_author + ",\n" +
                  "- **PR Number**: [#" + $pr_id + "](https://github.com/" + $repo + "/pull/" + $pr_id + ")\n" +
                  "- **Labels**: \n" +
                  "- **Workflow Status**: success\n\n" +
                  "**Files Changed:**\n" + $files_linked + "\n\n" +
                  "Please ensure all tests and checks are passed. We\'ll be reviewing it shortly.\n" +
                  "For more details, please check [our contribution guide](https://github.com/" + $repo + "/blob/main/CONTRIBUTING.md).")
        }'
        
        # Utiliza jq para crear el JSON, pasando la variable como argumento
        COMMENT_BODY=$(jq -n \
                        --arg pr_author "$PR_AUTHOR" \
                        --arg pr_id "$PR_ID" \
                        --arg repo "$REPO" \
                        --arg files_linked "$FILES_LINKED" \
                        "$COMMENT_TEXT")
                        
        curl \
          -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "$COMMENT_BODY" \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.PR_ID }}/comments"
        set +x          
