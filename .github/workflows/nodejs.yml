name: Node.js CI/CD

on:
  push:
    branches:
      - main
      - development

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    strategy:
      matrix:
        node: [20]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: git log --oneline -n 5
      - run: npm run build
      # - run: npm run test
      - run: ls -al

  update-package-version:
    needs: build-and-test
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm install
      - run: npx semantic-release --dry-run --branches development
      - run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git diff-index --quiet HEAD || git commit -am "Update package version" || echo "No changes to commit"
        continue-on-error: true
      - run: git push origin development

  release:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - name: Check if version already exists
        id: check_version
        run: |
          LATEST_VERSION=$(npm show ${{ env.PACKAGE_NAME }} version)
          NEW_VERSION=$(node -p "require('./package.json').version")
          if [[ "$LATEST_VERSION" == "$NEW_VERSION" ]]; then
            echo "Version already exists. Skipping publish step."
            echo "VERSION_EXISTS=true" >> $GITHUB_ENV
          else
            echo "New version. Proceeding with publish step."
            echo "VERSION_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Publish to NPM
        if: env.VERSION_EXISTS == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
