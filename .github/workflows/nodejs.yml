name: Node.js CI/CD

env:
  SEMREL_GPG_SIGNKEY: ${{ secrets.SEMREL_GPG_SIGNKEY }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  push:
    branches:
      - main
      - development
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    strategy:
      matrix:
        node: [20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: git log --oneline -n 5
      - run: npm run build:github
      # - run: npm run test
      - run: ls -al

  update-package-version:
    needs: build-and-test
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    strategy:
      matrix:
        node: [20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npx semantic-release --dry-run --branches development

      - name: Create and push a new branch and PR
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git checkout -b auto-update-version-${{ github.run_id }}
          git diff-index --quiet HEAD || git commit -am "Update package version" || echo "No changes to commit"
          git push origin auto-update-version-${{ github.run_id }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: development
          head: auto-update-version-${{ github.run_id }}
          title: "Automatically update package version"
          labels: "automated-pr, update-version"
          draft: false

  release:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Check package version
        id: cpv
        uses: PostHog/check-package-version@v2
      - name: Install dependencies
        if: steps.cpv.outputs.is-new-version == 'true'
        run: npm ci
      - name: Publish new version
        if: steps.cpv.outputs.is-new-version == 'true'
        run: npm publish
