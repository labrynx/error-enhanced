name: Node.js CI/CD  

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the 'main' branch

jobs:
  build-and-release:
    runs-on: ubuntu-latest  # Run the job on the latest Ubuntu image
    strategy:
      matrix:
        node: [ 18, 20 ]  # Test against Node.js v18 and v20
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout code  # Checkout the code from the repository
        uses: actions/checkout@v3

      - name: Cache Node.js modules  # Cache dependencies to speed up future runs
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js  # Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies  # Install NPM dependencies
        run: npm install

      - name: Show Git logs  # Debug: Show last 5 Git logs
        run: git log --oneline -n 5

      - name: Configure Git  # Configure Git for commits
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Build project  # Build the project and create 'dist' folder
        run: npm run build

      - name: List current directory  # Debug: List the files to check if 'dist' folder is created
        run: ls -al

      - name: Semantic Release  # Run Semantic Release for automated versioning and publishing
        run: npx semantic-release
        env:
          DEBUG: semantic-release:*  # Enable debugging for Semantic Release
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub Token for authentication
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}  # NPM Token for publishing
